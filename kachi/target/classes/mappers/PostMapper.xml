<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
<mapper namespace="com.kachi.five.PostMapper"><!-- 파일마다 있는 SQL문들을 구분할 수 있는 이름 -->
		<!--useGeneratedKeys="true" keyProperty="postId" 를 이용해 insert 문을 실행한 후에 생성된 auto-increment ID 값을 얻을 수 있다  -->
	<insert id="insertPost" parameterType="Post" useGeneratedKeys="true" keyProperty="postId">
		INSERT INTO Post (writerId,  categoryId,  title, content, price, salePeriod, saleStatus, discountRate)
		VALUES (#{writerId},  #{categoryId},  #{title}, #{content}, #{price}, #{salePeriod}, #{saleStatus}, #{discountRate})
	</insert>
   <select id="getAllPosts" resultType="com.kachi.five.bean.PostBean"> 
	    SELECT p.*, m.imageUrl as mainImageUrl , ROUND(AVG(r.rating), 2) as avgrating FROM Post p 
	    LEFT JOIN MainImage m ON p.postId = m.postId
	    LEFT JOIN review r ON p.postId = r.postId
	    GROUP BY p.postId;
	</select>
	<select id="getPostsByID" resultType="com.kachi.five.bean.PostBean">
	    SELECT p.*, ROUND(AVG(r.rating), 2) as avgrating
	    FROM Post p
	    LEFT JOIN review r ON p.postId = r.postId
	    WHERE p.postId = #{postId}
	    GROUP BY p.postId;
	</select>
	<delete id="deletePost"> 
        DELETE FROM post WHERE postid = #{postId} 
    </delete> 
    <select id="findPostsByTitleContaining" parameterType="String" resultType="com.kachi.five.bean.PostBean">
	    SELECT p.*, m.imageUrl as mainImageUrl 
	    FROM Post p 
	    LEFT JOIN MainImage m ON p.postId = m.postId
	    WHERE p.title LIKE CONCAT('%', #{query}, '%');
	</select>
<select id="getAllPostsOrderBySalePeriod" resultType="com.kachi.five.bean.PostBean"> 
    SELECT p.*, m.imageUrl as mainImageUrl, ROUND(AVG(r.rating), 2) as avgrating FROM Post p 
    LEFT JOIN MainImage m ON p.postId = m.postId 
    LEFT JOIN Review r ON p.postId = r.postId
    GROUP BY p.postId
    ORDER BY salePeriod ASC;
</select>

<select id="getAllPostsOrderBydiscountRate" resultType="com.kachi.five.bean.PostBean"> 
    SELECT p.*, m.imageUrl as mainImageUrl, ROUND(AVG(r.rating), 2) as avgrating FROM Post p 
    LEFT JOIN MainImage m ON p.postId = m.postId 
    LEFT JOIN Review r ON p.postId = r.postId
    GROUP BY p.postId
    ORDER BY discountRate DESC;
</select>

<select id="getAllPostsOrderByrecent" resultType="com.kachi.five.bean.PostBean"> 
    SELECT p.*, m.imageUrl as mainImageUrl, ROUND(AVG(r.rating), 2) as avgrating FROM Post p 
    LEFT JOIN MainImage m ON p.postId = m.postId 
    LEFT JOIN Review r ON p.postId = r.postId
    GROUP BY p.postId
    ORDER BY postDate DESC;
</select>
<select id="getAllPostsOrderByrating" resultType="com.kachi.five.bean.PostBean"> 
    SELECT p.*, m.imageUrl as mainImageUrl, ROUND(AVG(r.rating), 2) as avgrating FROM Post p 
    LEFT JOIN MainImage m ON p.postId = m.postId 
    LEFT JOIN Review r ON p.postId = r.postId
    GROUP BY p.postId
    ORDER BY avgrating DESC;
</select>
</mapper>